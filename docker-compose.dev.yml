version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: vibe-coding-postgres-dev
    environment:
      POSTGRES_DB: vibe_coding
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./packages/backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - vibe-coding-dev-network

  backend-dev:
    image: node:18-alpine
    container_name: vibe-coding-backend-dev
    working_dir: /app
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=vibe_coding
      - GROQ_API_KEY=${GROQ_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - TMDB_API_KEY=${TMDB_API_KEY}
    ports:
      - "3001:3001"
    volumes:
      - ./packages/backend:/app
      - /app/node_modules
    command: sh -c "npm install && npm run dev"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - vibe-coding-dev-network
    restart: unless-stopped

  frontend-dev:
    image: node:18-alpine
    container_name: vibe-coding-frontend-dev
    working_dir: /app
    environment:
      - VITE_BACKEND_URL=http://localhost:3001
    ports:
      - "3000:5173"
    volumes:
      - ./packages/frontend:/app
      - /app/node_modules
    command: sh -c "npm install && npm run dev -- --host"
    depends_on:
      - backend-dev
    networks:
      - vibe-coding-dev-network
    restart: unless-stopped

networks:
  vibe-coding-dev-network:
    driver: bridge

volumes:
  postgres_dev_data: 